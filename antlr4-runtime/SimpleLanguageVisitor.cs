//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Poc and Personal\GrammarDemo\SimpleLanguage.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SimpleLanguageParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface ISimpleLanguageVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.parse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParse([NotNull] SimpleLanguageParser.ParseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] SimpleLanguageParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat([NotNull] SimpleLanguageParser.StatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] SimpleLanguageParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.if_stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf_stat([NotNull] SimpleLanguageParser.If_statContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.condition_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition_block([NotNull] SimpleLanguageParser.Condition_blockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.stat_block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat_block([NotNull] SimpleLanguageParser.Stat_blockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.while_stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile_stat([NotNull] SimpleLanguageParser.While_statContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SimpleLanguageParser.log"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLog([NotNull] SimpleLanguageParser.LogContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>notExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpr([NotNull] SimpleLanguageParser.NotExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>unaryMinusExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryMinusExpr([NotNull] SimpleLanguageParser.UnaryMinusExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>multiplicationExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicationExpr([NotNull] SimpleLanguageParser.MultiplicationExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>atomExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtomExpr([NotNull] SimpleLanguageParser.AtomExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>orExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOrExpr([NotNull] SimpleLanguageParser.OrExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>additiveExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpr([NotNull] SimpleLanguageParser.AdditiveExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>powExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowExpr([NotNull] SimpleLanguageParser.PowExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>relationalExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpr([NotNull] SimpleLanguageParser.RelationalExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>equalityExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpr([NotNull] SimpleLanguageParser.EqualityExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>andExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAndExpr([NotNull] SimpleLanguageParser.AndExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>parExpr</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParExpr([NotNull] SimpleLanguageParser.ParExprContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>numberAtom</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumberAtom([NotNull] SimpleLanguageParser.NumberAtomContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>booleanAtom</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBooleanAtom([NotNull] SimpleLanguageParser.BooleanAtomContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>idAtom</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdAtom([NotNull] SimpleLanguageParser.IdAtomContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>stringAtom</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringAtom([NotNull] SimpleLanguageParser.StringAtomContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>nilAtom</c>
	/// labeled alternative in <see cref="SimpleLanguageParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNilAtom([NotNull] SimpleLanguageParser.NilAtomContext context);
}
